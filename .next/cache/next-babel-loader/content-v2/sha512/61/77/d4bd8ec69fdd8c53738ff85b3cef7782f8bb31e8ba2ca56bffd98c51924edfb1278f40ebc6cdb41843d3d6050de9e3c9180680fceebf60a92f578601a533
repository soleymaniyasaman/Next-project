{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yasaman/Documents/alaedinpricepage/alaedinmainwebfront/components/price/priceComponent_table/test.js\",\n    _this = this;\n\nimport React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\n\nvar test = function test() {\n  var jobs = [{\n    id: 0,\n    name: 'Job name 0',\n    owner: [1, 2],\n    type: 3\n  }];\n  var owners = ['Allen', 'Bob', 'Cat'];\n  var types = ['Cloud Service', 'Message Service', 'Add Service', 'Edit Service', 'Money'];\n  var columns = [{\n    dataField: 'id',\n    text: 'Job ID'\n  }, {\n    dataField: 'name',\n    text: 'Job Name',\n    filter: textFilter()\n  }, {\n    dataField: 'owner',\n    text: 'Job Owner',\n    filter: textFilter(),\n    formatter: function formatter(cell, row) {\n      owners[cell[0]], owners[cell[1]];\n    },\n    filterValue: function filterValue(cell, row) {\n      return owners[cell];\n    }\n  }, {\n    dataField: 'type',\n    text: 'Job Type',\n    filter: textFilter(),\n    formatter: function formatter(cell, row) {\n      return types[cell];\n    },\n    filterValue: function filterValue(cell, row) {\n      return types[cell];\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n      keyField: \"id\",\n      data: jobs,\n      columns: columns,\n      filter: filterFactory()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, _this);\n};\n\nexport default test; // shape of job: { id: 0, name: 'Job name 0', owner: 1, type: 3 }","map":{"version":3,"sources":["/Users/yasaman/Documents/alaedinpricepage/alaedinmainwebfront/components/price/priceComponent_table/test.js"],"names":["React","BootstrapTable","filterFactory","textFilter","test","jobs","id","name","owner","type","owners","types","columns","dataField","text","filter","formatter","cell","row","filterValue"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,aAAP,IAAwBC,UAAxB,QAA0C,+BAA1C;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACnB,MAAMC,IAAI,GAAG,CAAC;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAOC,IAAAA,IAAI,EAAE,YAAb;AAA0BC,IAAAA,KAAK,EAAE,CAAC,CAAD,EAAG,CAAH,CAAjC;AAAuCC,IAAAA,IAAI,EAAE;AAA7C,GAAD,CAAb;AACA,MAAMC,MAAM,GAAG,CAAC,OAAD,EAAU,KAAV,EAAiB,KAAjB,CAAf;AACA,MAAMC,KAAK,GAAG,CAAC,eAAD,EAAkB,iBAAlB,EAAqC,aAArC,EAAoD,cAApD,EAAoE,OAApE,CAAd;AACA,MAAMC,OAAO,GAAG,CAAC;AACfC,IAAAA,SAAS,EAAE,IADI;AAEfC,IAAAA,IAAI,EAAE;AAFS,GAAD,EAGb;AACDD,IAAAA,SAAS,EAAE,MADV;AAEDC,IAAAA,IAAI,EAAE,UAFL;AAGDC,IAAAA,MAAM,EAAEZ,UAAU;AAHjB,GAHa,EAOb;AACDU,IAAAA,SAAS,EAAE,OADV;AAEDC,IAAAA,IAAI,EAAE,WAFL;AAGDC,IAAAA,MAAM,EAAEZ,UAAU,EAHjB;AAIDa,IAAAA,SAAS,EAAE,mBAACC,IAAD,EAAOC,GAAP,EAAe;AAACR,MAAAA,MAAM,CAACO,IAAI,CAAC,CAAD,CAAL,CAAN,EAAgBP,MAAM,CAACO,IAAI,CAAC,CAAD,CAAL,CAAtB;AAAgC,KAJ1D;AAKDE,IAAAA,WAAW,EAAE,qBAACF,IAAD,EAAOC,GAAP;AAAA,aAAeR,MAAM,CAACO,IAAD,CAArB;AAAA;AALZ,GAPa,EAab;AACDJ,IAAAA,SAAS,EAAE,MADV;AAEDC,IAAAA,IAAI,EAAE,UAFL;AAGDC,IAAAA,MAAM,EAAEZ,UAAU,EAHjB;AAIDa,IAAAA,SAAS,EAAE,mBAACC,IAAD,EAAOC,GAAP;AAAA,aAAeP,KAAK,CAACM,IAAD,CAApB;AAAA,KAJV;AAKDE,IAAAA,WAAW,EAAE,qBAACF,IAAD,EAAOC,GAAP;AAAA,aAAeP,KAAK,CAACM,IAAD,CAApB;AAAA;AALZ,GAba,CAAhB;AAoBI,sBACI;AAAA,2BACI,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC,IAAzB;AAA8B,MAAA,IAAI,EAAGZ,IAArC;AAA4C,MAAA,OAAO,EAAGO,OAAtD;AAAgE,MAAA,MAAM,EAAGV,aAAa;AAAtF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CA7BD;;AA+BA,eAAeE,IAAf,C,CAGA","sourcesContent":["import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\n\n\nconst test = () => {\nconst jobs = [{id: 0,name: 'Job name 0',owner: [1,2],type: 3}]\nconst owners = ['Allen', 'Bob', 'Cat'];\nconst types = ['Cloud Service', 'Message Service', 'Add Service', 'Edit Service', 'Money'];\nconst columns = [{\n  dataField: 'id',\n  text: 'Job ID'\n}, {\n  dataField: 'name',\n  text: 'Job Name',\n  filter: textFilter()\n}, {\n  dataField: 'owner',\n  text: 'Job Owner',\n  filter: textFilter(),\n  formatter: (cell, row) => {owners[cell[0]],owners[cell[1]]},\n  filterValue: (cell, row) => owners[cell]\n}, {\n  dataField: 'type',\n  text: 'Job Type',\n  filter: textFilter(),\n  formatter: (cell, row) => types[cell],\n  filterValue: (cell, row) => types[cell]\n}];\n    return (\n        <div>\n            <BootstrapTable keyField='id' data={ jobs } columns={ columns } filter={ filterFactory() } />\n        </div>\n    );\n}\n\nexport default test;\n\n\n// shape of job: { id: 0, name: 'Job name 0', owner: 1, type: 3 }\n\n"]},"metadata":{},"sourceType":"module"}