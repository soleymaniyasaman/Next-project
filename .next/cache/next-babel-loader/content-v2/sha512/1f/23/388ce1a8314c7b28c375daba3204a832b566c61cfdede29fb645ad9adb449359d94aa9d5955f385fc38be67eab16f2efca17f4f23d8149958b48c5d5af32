{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yasaman/Documents/alaedinpricepage/alaedinmainwebfront/components/price/priceComponent_table/test.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\n\nconst test = () => {\n  const {\n    SearchBar\n  } = Search;\n  const jobs = [{\n    id: 0,\n    name: 'Job name 0',\n    owner: [1, 2],\n    type: 3\n  }, {\n    id: 1,\n    name: 'Job name 1',\n    owner: [0, 2],\n    type: 2\n  }];\n  const owners = ['Allen', 'Bob', 'Cat'];\n  const types = ['Cloud Service', 'Message Service', 'Add Service', 'Edit Service', 'Money'];\n  const columns = [{\n    dataField: 'id',\n    text: 'Job ID',\n    searchable: false,\n    hidden: true\n  }, {\n    dataField: 'owner',\n    text: 'Job Owner',\n    formatter: (cell, row) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: owners[cell[0]]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: owners[cell[1]]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this);\n    },\n    filterValue: (cell, row) => owners[1] //filterValue: (cell, row) => owners[cell[1]]// we will search the value after filterValue called\n\n  }, {\n    dataField: 'type',\n    text: 'Job Type',\n    formatter: (cell, row) => types[cell],\n    filterValue: (cell, row) => types[cell] // we will search the value after filterValue called\n\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n      keyField: \"id\",\n      data: jobs,\n      columns: columns,\n      search: true,\n      children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Try to Search Bob, Cat or Allen instead of 0, 1 or 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(SearchBar, _objectSpread({}, props.searchProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, _objectSpread({}, props.baseProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\nexport default test; // shape of job: { id: 0, name: 'Job name 0', owner: 1, type: 3 }\n// formatter: (cell, row) =>(\n//     <div>\n//         <p>{owners[cell[0]]}</p>\n//         <p>{owners[cell[1]]}</p>\n//     </div>\n//      ),\n// const jobs = [{id: 0,name: 'Job name 0',owner: [1,2],type: 3}]","map":{"version":3,"sources":["/Users/yasaman/Documents/alaedinpricepage/alaedinmainwebfront/components/price/priceComponent_table/test.js"],"names":["React","BootstrapTable","filterFactory","textFilter","ToolkitProvider","Search","test","SearchBar","jobs","id","name","owner","type","owners","types","columns","dataField","text","searchable","hidden","formatter","cell","row","filterValue","props","searchProps","baseProps"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,aAAP,IAAwBC,UAAxB,QAA0C,+BAA1C;AACA,OAAOC,eAAP,IAA0BC,MAA1B,QAAwC,gCAAxC;;AAGA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAM;AAAEC,IAAAA;AAAF,MAAgBF,MAAtB;AACA,QAAMG,IAAI,GAAG,CAAC;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAOC,IAAAA,IAAI,EAAE,YAAb;AAA0BC,IAAAA,KAAK,EAAE,CAAC,CAAD,EAAG,CAAH,CAAjC;AAAuCC,IAAAA,IAAI,EAAE;AAA7C,GAAD,EAAiD;AAACH,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAC,YAAX;AAAwBC,IAAAA,KAAK,EAAE,CAAC,CAAD,EAAG,CAAH,CAA/B;AAAqCC,IAAAA,IAAI,EAAE;AAA3C,GAAjD,CAAb;AAEA,QAAMC,MAAM,GAAG,CAAC,OAAD,EAAU,KAAV,EAAiB,KAAjB,CAAf;AACA,QAAMC,KAAK,GAAG,CAAC,eAAD,EAAkB,iBAAlB,EAAqC,aAArC,EAAoD,cAApD,EAAoE,OAApE,CAAd;AAEA,QAAMC,OAAO,GAAG,CAAC;AACfC,IAAAA,SAAS,EAAE,IADI;AAEfC,IAAAA,IAAI,EAAE,QAFS;AAGfC,IAAAA,UAAU,EAAE,KAHG;AAIfC,IAAAA,MAAM,EAAE;AAJO,GAAD,EAKb;AACDH,IAAAA,SAAS,EAAE,OADV;AAEDC,IAAAA,IAAI,EAAE,WAFL;AAGDG,IAAAA,SAAS,EAAE,CAACC,IAAD,EAAOC,GAAP,KAAc;AAAC,0BACpB;AAAA,gCACI;AAAA,oBAAIT,MAAM,CAACQ,IAAI,CAAC,CAAD,CAAL;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIR,MAAM,CAACQ,IAAI,CAAC,CAAD,CAAL;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADoB;AAKlB,KARP;AASDE,IAAAA,WAAW,EAAE,CAACF,IAAD,EAAOC,GAAP,KAAeT,MAAM,CAAC,CAAD,CATjC,CAUD;;AAVC,GALa,EAgBb;AACDG,IAAAA,SAAS,EAAE,MADV;AAEDC,IAAAA,IAAI,EAAE,UAFL;AAGDG,IAAAA,SAAS,EAAE,CAACC,IAAD,EAAOC,GAAP,KAAeR,KAAK,CAACO,IAAD,CAH9B;AAIDE,IAAAA,WAAW,EAAE,CAACF,IAAD,EAAOC,GAAP,KAAeR,KAAK,CAACO,IAAD,CAJhC,CAIuC;;AAJvC,GAhBa,CAAhB;AAsBA,sBACI;AAAA,2BAER,QAAC,eAAD;AACE,MAAA,QAAQ,EAAC,IADX;AAEE,MAAA,IAAI,EAAGb,IAFT;AAGE,MAAA,OAAO,EAAGO,OAHZ;AAIE,MAAA,MAAM,MAJR;AAAA,gBAOIS,KAAK,iBACH;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD,oBAAgBA,KAAK,CAACC,WAAtB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,cAAD,oBACOD,KAAK,CAACE,SADb;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AARN;AAAA;AAAA;AAAA;AAAA;AAFQ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CArDD;;AAuDA,eAAepB,IAAf,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\n\n\nconst test = () => {\n    const { SearchBar } = Search;\n    const jobs = [{id: 0,name: 'Job name 0',owner: [1,2],type: 3},{id:1,name:'Job name 1',owner: [0,2],type: 2}]\n\n    const owners = ['Allen', 'Bob', 'Cat'];\n    const types = ['Cloud Service', 'Message Service', 'Add Service', 'Edit Service', 'Money'];\n    \n    const columns = [{\n      dataField: 'id',\n      text: 'Job ID',\n      searchable: false,\n      hidden: true\n    }, {\n      dataField: 'owner',\n      text: 'Job Owner',\n      formatter: (cell, row) =>{return(\n            <div>\n                <p>{owners[cell[0]]}</p>\n                <p>{owners[cell[1]]}</p>\n            </div>\n            )},      \n      filterValue: (cell, row) => owners[1] ,\n      //filterValue: (cell, row) => owners[cell[1]]// we will search the value after filterValue called\n    }, {\n      dataField: 'type',\n      text: 'Job Type',\n      formatter: (cell, row) => types[cell],\n      filterValue: (cell, row) => types[cell] // we will search the value after filterValue called\n    }];\n    return (\n        <div>\n\n<ToolkitProvider\n  keyField=\"id\"\n  data={ jobs }\n  columns={ columns }\n  search\n>\n  {\n    props => (\n      <div>\n        <h3>Try to Search Bob, Cat or Allen instead of 0, 1 or 2</h3>\n        <SearchBar { ...props.searchProps } />\n        <hr />\n        <BootstrapTable\n          { ...props.baseProps }\n        />\n      </div>\n    )\n  }\n</ToolkitProvider>\n        </div>\n    );\n}\n\nexport default test;\n\n\n// shape of job: { id: 0, name: 'Job name 0', owner: 1, type: 3 }\n\n// formatter: (cell, row) =>(\n//     <div>\n//         <p>{owners[cell[0]]}</p>\n//         <p>{owners[cell[1]]}</p>\n//     </div>\n//      ),\n\n// const jobs = [{id: 0,name: 'Job name 0',owner: [1,2],type: 3}]\n"]},"metadata":{},"sourceType":"module"}