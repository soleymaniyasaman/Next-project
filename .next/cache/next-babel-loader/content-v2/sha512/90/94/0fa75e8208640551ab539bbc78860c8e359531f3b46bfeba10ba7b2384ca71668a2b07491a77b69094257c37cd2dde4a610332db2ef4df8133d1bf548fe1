{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yasaman/Documents/alaedinpricepage/alaedinmainwebfront/components/price/priceComponent_table/test.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { React, useState, useEffect } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport styles from './priceComponent_table.module.scss';\n\nconst test = ({\n  tableData\n}) => {\n  const {\n    SearchBar\n  } = Search;\n  const {\n    0: isMobile,\n    1: setIsMobile\n  } = useState(false);\n  const jobs = [{\n    id: 0,\n    name: tableData[0].ram,\n    owner: 0,\n    type: 0\n  }, {\n    id: 1,\n    name: tableData[1].ram,\n    owner: 1,\n    type: 1\n  }];\n  const PName = [];\n  const EName = [];\n  const PPrice = [];\n  const CPrice = [];\n  tableData.forEach(table => {\n    PName.push(`${table.persianName}`);\n    EName.push(`${table.englishName}`);\n    PPrice.push(`${table.price.price}`);\n    CPrice.push(`${table.price.changePrice}`);\n  });\n\n  const idFormatter = cell => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `${styles.PriceComponent_tableRam} `,\n      children: cell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this);\n  };\n\n  const columns = [{\n    dataField: 'name',\n    text: 'Job NAME',\n    formatter: idFormatter,\n    searchable: false\n  }, {\n    dataField: 'owner',\n    text: 'Job Owner',\n    formatter: (cell, row) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: PName[cell]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: EName[cell]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this);\n    },\n    filterValue: (cell, row) => [owners[cell], types[cell]] //filterValue: (cell, row) => owners[cell[1]]// we will search the value after filterValue called\n\n  }, {\n    dataField: 'type',\n    text: 'Job Type',\n    formatter: (cell, row) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: PPrice[cell]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: CPrice[cell]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    },\n    filterValue: (cell, row) => [ownerss[cell], typess[cell]]\n  }];\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      if (window.innerWidth < 576) {\n        console.log(\"heeeyyyy\");\n        setIsMobile(true);\n      } else {\n        console.log(\"hooooy\");\n        setIsMobile(false);\n      }\n    }, false);\n  }, [isMobile]);\n  const expandRow = {\n    // className: `${styles.expanding_foo}`,\n    renderer: (row, rowIndex) => {\n      // <div style={ { width: '100%', height: '20px' } }>Content</div>\n      var table = [];\n      table.push({\n        ram: tableData[rowIndex].ram,\n        garantee: tableData[rowIndex].garantee,\n        backColor: tableData[rowIndex].backColor\n      });\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [console.log(table), table.map(table => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: table.ram\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: table.garantee\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${styles.PriceComponent_tableGarantee} `,\n            children: table.backColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true))]\n      }, void 0, true);\n    },\n    showExpandColumn: isMobile ? true : false,\n    expandByColumnOnly: true\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n      keyField: \"id\",\n      data: jobs,\n      columns: columns,\n      search: true,\n      children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Try to Search Bob, Cat or Allen instead of 0, 1 or 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(SearchBar, _objectSpread({}, props.searchProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, _objectSpread(_objectSpread({}, props.baseProps), {}, {\n          expandRow: expandRow\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n\nexport default test; // shape of job: { id: 0, name: 'Job name 0', owner: 1, type: 3 }\n// formatter: (cell, row) =>(\n//     <div>\n//         <p>{owners[cell[0]]}</p>\n//         <p>{owners[cell[1]]}</p>\n//     </div>\n//      ),\n// const jobs = [{id: 0,name: 'Job name 0',owner: [1,2],type: 3}]","map":{"version":3,"sources":["/Users/yasaman/Documents/alaedinpricepage/alaedinmainwebfront/components/price/priceComponent_table/test.js"],"names":["React","useState","useEffect","BootstrapTable","filterFactory","textFilter","ToolkitProvider","Search","styles","test","tableData","SearchBar","isMobile","setIsMobile","jobs","id","name","ram","owner","type","PName","EName","PPrice","CPrice","forEach","table","push","persianName","englishName","price","changePrice","idFormatter","cell","PriceComponent_tableRam","columns","dataField","text","formatter","searchable","row","filterValue","owners","types","ownerss","typess","window","addEventListener","innerWidth","console","log","expandRow","renderer","rowIndex","garantee","backColor","map","PriceComponent_tableGarantee","showExpandColumn","expandByColumnOnly","props","searchProps","baseProps"],"mappings":";;;;;;;;;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,aAAP,IAAwBC,UAAxB,QAA0C,+BAA1C;AACA,OAAOC,eAAP,IAA0BC,MAA1B,QAAwC,gCAAxC;AACA,OAAOC,MAAP,MAAmB,oCAAnB;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAgBJ,MAAtB;AACA,QAAM;AAAA,OAACK,QAAD;AAAA,OAAWC;AAAX,MAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMa,IAAI,GAAG,CAAC;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAOC,IAAAA,IAAI,EAAEN,SAAS,CAAC,CAAD,CAAT,CAAaO,GAA1B;AAA8BC,IAAAA,KAAK,EAAE,CAArC;AAAuCC,IAAAA,IAAI,EAAE;AAA7C,GAAD,EAAiD;AAACJ,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAACN,SAAS,CAAC,CAAD,CAAT,CAAaO,GAAxB;AAA4BC,IAAAA,KAAK,EAAE,CAAnC;AAAqCC,IAAAA,IAAI,EAAE;AAA3C,GAAjD,CAAb;AAEA,QAAMC,KAAK,GAAG,EAAd;AACA,QAAMC,KAAK,GAAG,EAAd;AACA,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,MAAM,GAAG,EAAf;AACAb,EAAAA,SAAS,CAACc,OAAV,CAAkBC,KAAK,IAAI;AACvBL,IAAAA,KAAK,CAACM,IAAN,CAAY,GAAED,KAAK,CAACE,WAAY,EAAhC;AACAN,IAAAA,KAAK,CAACK,IAAN,CAAY,GAAED,KAAK,CAACG,WAAY,EAAhC;AACAN,IAAAA,MAAM,CAACI,IAAP,CAAa,GAAED,KAAK,CAACI,KAAN,CAAYA,KAAM,EAAjC;AACAN,IAAAA,MAAM,CAACG,IAAP,CAAa,GAAED,KAAK,CAACI,KAAN,CAAYC,WAAY,EAAvC;AAEH,GAND;;AAOA,QAAMC,WAAW,GAAIC,IAAD,IAAU;AAC5B,wBACE;AAAG,MAAA,SAAS,EAAG,GAAExB,MAAM,CAACyB,uBAAwB,GAAhD;AAAA,gBAAqDD;AAArD;AAAA;AAAA;AAAA;AAAA,YADF;AAEI,GAHN;;AAIA,QAAME,OAAO,GAAG,CAAC;AACfC,IAAAA,SAAS,EAAE,MADI;AAEfC,IAAAA,IAAI,EAAE,UAFS;AAGfC,IAAAA,SAAS,EAACN,WAHK;AAIfO,IAAAA,UAAU,EAAE;AAJG,GAAD,EAMb;AACDH,IAAAA,SAAS,EAAE,OADV;AAEDC,IAAAA,IAAI,EAAE,WAFL;AAGDC,IAAAA,SAAS,EAAE,CAACL,IAAD,EAAOO,GAAP,KAAc;AAAC,0BACpB;AAAA,gCACI;AAAA,oBAAInB,KAAK,CAACY,IAAD;AAAT;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIX,KAAK,CAACW,IAAD;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADoB;AAKlB,KARP;AASDQ,IAAAA,WAAW,EAAE,CAACR,IAAD,EAAOO,GAAP,KAAe,CAACE,MAAM,CAACT,IAAD,CAAP,EAAcU,KAAK,CAACV,IAAD,CAAnB,CAT3B,CAUD;;AAVC,GANa,EAiBb;AACDG,IAAAA,SAAS,EAAE,MADV;AAEDC,IAAAA,IAAI,EAAE,UAFL;AAGDC,IAAAA,SAAS,EAAE,CAACL,IAAD,EAAOO,GAAP,KAAc;AAAC,0BACxB;AAAA,gCACI;AAAA,oBAAIjB,MAAM,CAACU,IAAD;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIT,MAAM,CAACS,IAAD;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADwB;AAKtB,KARH;AASCQ,IAAAA,WAAW,EAAE,CAACR,IAAD,EAAOO,GAAP,KAAe,CAACI,OAAO,CAACX,IAAD,CAAR,EAAeY,MAAM,CAACZ,IAAD,CAArB;AAT7B,GAjBa,CAAhB;AA4BA9B,EAAAA,SAAS,CAAC,MAAM;AACd2C,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACpC,UAAID,MAAM,CAACE,UAAP,GAAoB,GAAxB,EAA6B;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACApC,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH,OAHD,MAGO;AACHmC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACApC,QAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AACJ,KARD,EAQG,KARH;AASH,GAVU,EAUR,CAACD,QAAD,CAVQ,CAAT;AAWA,QAAMsC,SAAS,GAAG;AAChB;AACAC,IAAAA,QAAQ,EAAE,CAACZ,GAAD,EAAKa,QAAL,KAAkB;AAC1B;AACA,UAAI3B,KAAK,GAAE,EAAX;AACAA,MAAAA,KAAK,CAACC,IAAN,CAAW;AACTT,QAAAA,GAAG,EAACP,SAAS,CAAC0C,QAAD,CAAT,CAAoBnC,GADf;AAEToC,QAAAA,QAAQ,EAAC3C,SAAS,CAAC0C,QAAD,CAAT,CAAoBC,QAFpB;AAGTC,QAAAA,SAAS,EAAC5C,SAAS,CAAC0C,QAAD,CAAT,CAAoBE;AAHrB,OAAX;AAKA,0BACI;AAAA,mBACCN,OAAO,CAACC,GAAR,CAAYxB,KAAZ,CADD,EAEGA,KAAK,CAAC8B,GAAN,CAAU9B,KAAK,iBACd;AAAA,kCACA;AAAA,sBAAIA,KAAK,CAACR;AAAV;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,sBAAIQ,KAAK,CAAC4B;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAK,YAAA,SAAS,EAAG,GAAE7C,MAAM,CAACgD,4BAA6B,GAAvD;AAAA,sBAA4D/B,KAAK,CAAC6B;AAAlE;AAAA;AAAA;AAAA;AAAA,kBAHA;AAAA,wBADD,CAFH;AAAA,sBADJ;AAcD,KAxBe;AAyBhBG,IAAAA,gBAAgB,EAAE7C,QAAQ,GAAE,IAAF,GAAS,KAzBnB;AA0BhB8C,IAAAA,kBAAkB,EAAE;AA1BJ,GAAlB;AA4BA,sBACI;AAAA,2BAER,QAAC,eAAD;AACE,MAAA,QAAQ,EAAC,IADX;AAEE,MAAA,IAAI,EAAG5C,IAFT;AAGE,MAAA,OAAO,EAAGoB,OAHZ;AAIE,MAAA,MAAM,MAJR;AAAA,gBAOIyB,KAAK,iBACH;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD,oBAAgBA,KAAK,CAACC,WAAtB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,cAAD,kCACOD,KAAK,CAACE,SADb;AAEE,UAAA,SAAS,EAAGX;AAFd;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AARN;AAAA;AAAA;AAAA;AAAA;AAFQ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CAlHD;;AAoHA,eAAezC,IAAf,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { React, useState, useEffect } from 'react'\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport styles from './priceComponent_table.module.scss';\n\n\nconst test = ({tableData}) => {\n    const { SearchBar } = Search;\n    const [isMobile, setIsMobile] = useState(false);\n\n    const jobs = [{id: 0,name: tableData[0].ram,owner: 0,type: 0},{id:1,name:tableData[1].ram,owner: 1,type: 1}]\n\n    const PName = []\n    const EName = []\n    const PPrice = []\n    const CPrice = []\n    tableData.forEach(table => {\n        PName.push(`${table.persianName}`)\n        EName.push(`${table.englishName}`)\n        PPrice.push(`${table.price.price}`)\n        CPrice.push(`${table.price.changePrice}`)\n\n    });\n    const idFormatter = (cell) => {\n      return (\n        <p className={`${styles.PriceComponent_tableRam} `}>{cell}</p>\n    )    }\n    const columns = [{\n      dataField: 'name',\n      text: 'Job NAME',\n      formatter:idFormatter,\n      searchable: false,\n      \n    }, {\n      dataField: 'owner',\n      text: 'Job Owner',\n      formatter: (cell, row) =>{return(\n            <div>\n                <p>{PName[cell]}</p>\n                <p>{EName[cell]}</p>\n            </div>\n            )},      \n      filterValue: (cell, row) => [owners[cell],types[cell]] ,\n      //filterValue: (cell, row) => owners[cell[1]]// we will search the value after filterValue called\n    }, {\n      dataField: 'type',\n      text: 'Job Type',\n      formatter: (cell, row) =>{return(\n        <div>\n            <p>{PPrice[cell]}</p>\n            <p>{CPrice[cell]}</p>\n        </div>\n        )}, \n        filterValue: (cell, row) => [ownerss[cell],typess[cell]] ,\n      }];\n    useEffect(() => {\n      window.addEventListener(\"resize\", () => {\n          if (window.innerWidth < 576) {\n              console.log(\"heeeyyyy\");\n              setIsMobile(true);\n          } else {\n              console.log(\"hooooy\");\n              setIsMobile(false);\n          }\n      }, false);\n  }, [isMobile]);\n    const expandRow = {\n      // className: `${styles.expanding_foo}`,\n      renderer: (row,rowIndex) => {\n        // <div style={ { width: '100%', height: '20px' } }>Content</div>\n        var table =[]\n        table.push({\n          ram:tableData[rowIndex].ram,\n          garantee:tableData[rowIndex].garantee,\n          backColor:tableData[rowIndex].backColor\n        })\n        return(\n            <>\n            {console.log(table)}\n              {table.map(table => (\n                <>\n                <p>{table.ram}</p>\n                <p>{table.garantee}</p>\n                <div className={`${styles.PriceComponent_tableGarantee} `}>{table.backColor}</div>\n\n                </>\n              ))}\n              </>\n\n        )\n      },\n      showExpandColumn: isMobile? true : false,\n      expandByColumnOnly: true\n    };\n    return (\n        <div>\n\n<ToolkitProvider\n  keyField=\"id\"\n  data={ jobs }\n  columns={ columns }\n  search\n>\n  {\n    props => (\n      <div>\n        <h3>Try to Search Bob, Cat or Allen instead of 0, 1 or 2</h3>\n        <SearchBar { ...props.searchProps } />\n        <hr />\n        <BootstrapTable\n          { ...props.baseProps }\n          expandRow={ expandRow }\n\n        />\n      </div>\n    )\n  }\n</ToolkitProvider>\n        </div>\n    );\n}\n\nexport default test;\n\n\n// shape of job: { id: 0, name: 'Job name 0', owner: 1, type: 3 }\n\n// formatter: (cell, row) =>(\n//     <div>\n//         <p>{owners[cell[0]]}</p>\n//         <p>{owners[cell[1]]}</p>\n//     </div>\n//      ),\n\n// const jobs = [{id: 0,name: 'Job name 0',owner: [1,2],type: 3}]\n"]},"metadata":{},"sourceType":"module"}