{"ast":null,"code":"import _defineProperty from \"/Users/yasaman/Documents/alaedinpricepage/alaedinmainwebfront/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yasaman/Documents/alaedinpricepage/alaedinmainwebfront/components/price/priceComponent_table/test.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport styles from './priceComponent_table.module.scss';\n\nvar test = function test() {\n  var SearchBar = Search.SearchBar;\n  var jobs = [{\n    id: 0,\n    name: 'Job name 0',\n    owner: [1, 2],\n    type: \"salam\"\n  }, {\n    id: 1,\n    name: 'Job name 1',\n    owner: [0, 2],\n    type: \"aleyk\"\n  }];\n  var owners = ['Allen', 'Bob', 'Cat'];\n  var types = ['Cloud Service', 'Message Service', 'Add Service', 'Edit Service', 'Money'];\n  var columns = [{\n    dataField: 'id',\n    text: 'Job ID',\n    searchable: false,\n    hidden: true\n  }, {\n    dataField: 'owner',\n    text: 'Job Owner',\n    formatter: function formatter(cell, row) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: owners[cell[0]]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: types[cell[1]]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, _this);\n    },\n    filterValue: function filterValue(cell, row) {\n      return [owners[cell[0]], types[cell[1]]];\n    } //filterValue: (cell, row) => owners[cell[1]]// we will search the value after filterValue called\n\n  }, {\n    dataField: 'type',\n    text: 'Job Type',\n    formatter: function formatter(cell, row) {\n      return cell;\n    },\n    filterValue: function filterValue(cell, row) {\n      return cell;\n    } // we will search the value after filterValue called\n\n  }];\n  var expandRow = {\n    className: \"\".concat(styles.expanding_foo),\n    renderer: function renderer() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: '20px'\n        },\n        children: \"Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, _this);\n    },\n    showExpandColumn: true,\n    expandByColumnOnly: true\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n      keyField: \"id\",\n      data: jobs,\n      columns: columns,\n      search: true,\n      children: function children(props) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Try to Search Bob, Cat or Allen instead of 0, 1 or 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/_jsxDEV(SearchBar, _objectSpread({}, props.searchProps), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/_jsxDEV(BootstrapTable, _objectSpread(_objectSpread({}, props.baseProps), {}, {\n            expandRow: expandRow\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 1\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, _this);\n};\n\nexport default test; // shape of job: { id: 0, name: 'Job name 0', owner: 1, type: 3 }\n// formatter: (cell, row) =>(\n//     <div>\n//         <p>{owners[cell[0]]}</p>\n//         <p>{owners[cell[1]]}</p>\n//     </div>\n//      ),\n// const jobs = [{id: 0,name: 'Job name 0',owner: [1,2],type: 3}]","map":{"version":3,"sources":["/Users/yasaman/Documents/alaedinpricepage/alaedinmainwebfront/components/price/priceComponent_table/test.js"],"names":["React","BootstrapTable","filterFactory","textFilter","ToolkitProvider","Search","styles","test","SearchBar","jobs","id","name","owner","type","owners","types","columns","dataField","text","searchable","hidden","formatter","cell","row","filterValue","expandRow","className","expanding_foo","renderer","width","height","showExpandColumn","expandByColumnOnly","props","searchProps","baseProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport styles from './priceComponent_table.module.scss';\n\n\nconst test = () => {\n    const { SearchBar } = Search;\n    const jobs = [{id: 0,name: 'Job name 0',owner: [1,2],type: \"salam\"},{id:1,name:'Job name 1',owner: [0,2],type: \"aleyk\"}]\n\n    const owners = ['Allen', 'Bob', 'Cat'];\n    const types = ['Cloud Service', 'Message Service', 'Add Service', 'Edit Service', 'Money'];\n    \n    const columns = [{\n      dataField: 'id',\n      text: 'Job ID',\n      searchable: false,\n      hidden: true\n    }, {\n      dataField: 'owner',\n      text: 'Job Owner',\n      formatter: (cell, row) =>{return(\n            <div>\n                <p>{owners[cell[0]]}</p>\n                <p>{types[cell[1]]}</p>\n            </div>\n            )},      \n      filterValue: (cell, row) => [owners[cell[0]],types[cell[1]]] ,\n      //filterValue: (cell, row) => owners[cell[1]]// we will search the value after filterValue called\n    }, {\n      dataField: 'type',\n      text: 'Job Type',\n      formatter: (cell, row) => cell,\n      filterValue: (cell, row) => cell // we will search the value after filterValue called\n    }];\n    const expandRow = {\n      className: `${styles.expanding_foo}`,\n      renderer: () => (\n        <div style={ { width: '100%', height: '20px' } }>Content</div>\n      ),\n      showExpandColumn: true,\n      expandByColumnOnly: true\n    };\n    return (\n        <div>\n\n<ToolkitProvider\n  keyField=\"id\"\n  data={ jobs }\n  columns={ columns }\n  search\n>\n  {\n    props => (\n      <div>\n        <h3>Try to Search Bob, Cat or Allen instead of 0, 1 or 2</h3>\n        <SearchBar { ...props.searchProps } />\n        <hr />\n        <BootstrapTable\n          { ...props.baseProps }\n          expandRow={ expandRow }\n\n        />\n      </div>\n    )\n  }\n</ToolkitProvider>\n        </div>\n    );\n}\n\nexport default test;\n\n\n// shape of job: { id: 0, name: 'Job name 0', owner: 1, type: 3 }\n\n// formatter: (cell, row) =>(\n//     <div>\n//         <p>{owners[cell[0]]}</p>\n//         <p>{owners[cell[1]]}</p>\n//     </div>\n//      ),\n\n// const jobs = [{id: 0,name: 'Job name 0',owner: [1,2],type: 3}]\n"]},"metadata":{},"sourceType":"module"}